"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4970],{6778:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var l=s(4848),r=s(8453);const a={id:"server-commands",sidebar_label:"Server Management",title:"Server Management",slug:"server"},i=void 0,t={id:"commands/server-commands",title:"Server Management",description:"COMMAND",source:"@site/docs/commands/server.md",sourceDirName:"commands",slug:"/commands/server",permalink:"/garnet/docs/commands/server",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/garnet/tree/main/website/docs/commands/server.md",tags:[],version:"current",frontMatter:{id:"server-commands",sidebar_label:"Server Management",title:"Server Management",slug:"server"},sidebar:"garnetDocSidebar",previous:{title:"Data Structures",permalink:"/garnet/docs/commands/data-structures"},next:{title:"Checkpoint",permalink:"/garnet/docs/commands/checkpoint"}},d={},c=[{value:"COMMAND",id:"command",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Resp Reply",id:"resp-reply",level:4},{value:"COMMITAOF",id:"commitaof",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Resp Reply",id:"resp-reply-1",level:4},{value:"CONFIG GET",id:"config-get",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Resp Reply",id:"resp-reply-2",level:4},{value:"CONFIG SET",id:"config-set",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Resp Reply",id:"resp-reply-3",level:4},{value:"DBSIZE",id:"dbsize",level:3},{value:"Syntax",id:"syntax-4",level:4},{value:"Resp Reply",id:"resp-reply-4",level:4},{value:"FLUSHDB",id:"flushdb",level:3},{value:"Syntax",id:"syntax-5",level:4},{value:"Resp Reply",id:"resp-reply-5",level:4},{value:"LATENCY HELP",id:"latency-help",level:3},{value:"Syntax",id:"syntax-6",level:4},{value:"Resp Reply",id:"resp-reply-6",level:4},{value:"LATENCY HISTOGRAM",id:"latency-histogram",level:3},{value:"Syntax",id:"syntax-7",level:4},{value:"Resp Reply",id:"resp-reply-7",level:4},{value:"LATENCY RESET",id:"latency-reset",level:3},{value:"Syntax",id:"syntax-8",level:4},{value:"Resp Reply",id:"resp-reply-8",level:4},{value:"MEMORY USAGE",id:"memory-usage",level:3},{value:"Syntax",id:"syntax-9",level:4},{value:"Resp Reply",id:"resp-reply-9",level:4},{value:"REPLICAOF",id:"replicaof",level:3},{value:"Syntax",id:"syntax-10",level:4},{value:"Resp Reply",id:"resp-reply-10",level:4},{value:"TIME",id:"time",level:3},{value:"Syntax",id:"syntax-11",level:4},{value:"Resp Reply",id:"resp-reply-11",level:4}];function h(e){const n={br:"br",code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h3,{id:"command",children:"COMMAND"}),"\n",(0,l.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"COMMAND\n"})}),"\n",(0,l.jsx)(n.p,{children:"Return an array with details about every Redis command."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Array reply: a nested list of command details. The order of the commands in the array is random."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"commitaof",children:"COMMITAOF"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-1",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"COMMITAOF\n"})}),"\n",(0,l.jsx)(n.p,{children:"This command manually issues a commit to write ahead logging (append-only file)"}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-1",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Simple string reply: AOF file committed"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"config-get",children:"CONFIG GET"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-2",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"CONFIG GET parameter [parameter ...]\n"})}),"\n",(0,l.jsx)(n.p,{children:"The CONFIG GET command is used to read the configuration parameters of a running Garnet server."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-2",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Array reply: a list of configuration parameters matching the provided arguments."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"config-set",children:"CONFIG SET"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-3",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"CONFIG SET parameter value [parameter value ...]\n"})}),"\n",(0,l.jsx)(n.p,{children:"The CONFIG SET command is used in order to reconfigure the server at run time without the need to restart Garnet."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-3",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Simple string reply: OK when the configuration was set properly. Otherwise an error is returned."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"dbsize",children:"DBSIZE"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-4",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"DBSIZE\n"})}),"\n",(0,l.jsx)(n.p,{children:"Return the number of keys in the currently-selected database."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-4",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Integer reply: the number of keys in the currently-selected database."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"flushdb",children:"FLUSHDB"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-5",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"FLUSHDB [ASYNC | SYNC]\n"})}),"\n",(0,l.jsx)(n.p,{children:"Delete all the keys of the currently selected DB. This command never fails."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-5",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Simple string reply: OK."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"latency-help",children:"LATENCY HELP"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-6",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"LATENCY HELP\n"})}),"\n",(0,l.jsx)(n.p,{children:"Returns all the supported LATENCY sub-commands"}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-6",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Array reply: a list of LATENCY supported sub-command details."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"latency-histogram",children:"LATENCY HISTOGRAM"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-7",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"LATENCY HISTOGRAM [event [event ...]]\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Return latency histogram of or more ",(0,l.jsx)(n.code,{children:"<event>"})," classes. ",(0,l.jsx)(n.br,{}),"\n","If no commands are specified then all histograms are replied"]}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-7",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Array reply"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"latency-reset",children:"LATENCY RESET"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-8",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"LATENCY RESET [event [event ...]]\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Reset latency data of one or more ",(0,l.jsx)(n.code,{children:"<event>"})," (default: reset all data for all event classes)."]}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-8",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Simple string reply: OK."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"memory-usage",children:"MEMORY USAGE"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-9",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"MEMORY USAGE key [SAMPLES count]\n"})}),"\n",(0,l.jsx)(n.p,{children:"The MEMORY USAGE command reports the number of bytes that a key and its value require to be stored in RAM."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-9",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"One of the following:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Integer reply: the memory usage in bytes."}),"\n",(0,l.jsx)(n.li,{children:"Null reply: if the key does not exist."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"replicaof",children:"REPLICAOF"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-10",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"REPLICAOF <host port | NO ONE>\n"})}),"\n",(0,l.jsx)(n.p,{children:"The REPLICAOF command can change the replication settings of a replica on the fly."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-10",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Simple string reply: OK."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"time",children:"TIME"}),"\n",(0,l.jsx)(n.h4,{id:"syntax-11",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"TIME\n"})}),"\n",(0,l.jsx)(n.p,{children:"The TIME command returns the current server time as a two items lists: a Unix timestamp and the amount of microseconds already elapsed in the current second. Basically the interface is very similar to the one of the gettimeofday system call."}),"\n",(0,l.jsx)(n.h4,{id:"resp-reply-11",children:"Resp Reply"}),"\n",(0,l.jsx)(n.p,{children:"Array reply: specifically, a two-element array consisting of the Unix timestamp in seconds and the microseconds' count."}),"\n",(0,l.jsx)(n.hr,{})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>t});var l=s(6540);const r={},a=l.createContext(r);function i(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);